#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
#ifndef NEFTASDK_SWIFT_H
#define NEFTASDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="NeftaSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;

SWIFT_CLASS("_TtC8NeftaSDK11BidResponse")
@interface BidResponse : NSObject
@property (nonatomic, copy) NSString * _Null_unspecified _id;
@property (nonatomic) float _price;
@property (nonatomic, copy) NSString * _Nullable _campaignId;
@property (nonatomic, copy) NSString * _Nullable _creativeId;
- (BOOL)IsExpired SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8NeftaSDK7Insight")
@interface Insight : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable _status;
@property (nonatomic, readonly) int64_t _int;
@property (nonatomic, readonly) double _float;
@property (nonatomic, readonly, copy) NSString * _Nullable _string;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum Types : NSInteger;
@class Placement;
@protocol NAdListener;
@class NSData;

SWIFT_CLASS("_TtC8NeftaSDK3NAd")
@interface NAd : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger Request;)
+ (NSInteger)Request SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger Initialized;)
+ (NSInteger)Initialized SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger Bidding;)
+ (NSInteger)Bidding SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger ReadyToLoad;)
+ (NSInteger)ReadyToLoad SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger Loading;)
+ (NSInteger)Loading SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger Ready;)
+ (NSInteger)Ready SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger Showing;)
+ (NSInteger)Showing SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger Hidden;)
+ (NSInteger)Hidden SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger Expired;)
+ (NSInteger)Expired SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) NSString * _Nonnull _id;
@property (nonatomic) enum Types _type;
@property (nonatomic, strong) Placement * _Nullable _placement;
@property (nonatomic, strong) BidResponse * _Nullable _bid;
@property (nonatomic) NSInteger _state;
@property (nonatomic) int64_t _stateStart;
@property (nonatomic, strong) id <NAdListener> _Nullable _listener;
- (nonnull instancetype)initWithId:(NSString * _Nonnull)id OBJC_DESIGNATED_INITIALIZER;
- (NSInteger)CanShow SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, id> * _Nonnull)GetPartialBidRequest SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)GetPartialBidRequestAsString SWIFT_WARN_UNUSED_RESULT;
- (void)Bid;
- (void)LoadWithBidResponseWithBidResponse:(NSData * _Nonnull)bidResponse;
- (void)Load;
- (void)ShowThreaded;
- (void)Show;
- (void)CloseThreaded;
- (void)Close;
- (void)SetFloorPriceWithFloorPrice:(float)floorPrice;
- (void)SetCustomParameterWithProvider:(NSString * _Nonnull)provider value:(NSString * _Nonnull)value;
- (void)Mute:(BOOL)mute;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NError;

SWIFT_PROTOCOL("_TtP8NeftaSDK11NAdListener_")
@protocol NAdListener <NSObject>
@optional
- (void)OnBidWithAd:(NAd * _Nonnull)ad bidResponse:(BidResponse * _Nullable)bidResponse error:(NError * _Nullable)error;
- (void)OnLoadStartWithAd:(NAd * _Nonnull)ad;
@required
- (void)OnLoadFailWithAd:(NAd * _Nonnull)ad error:(NError * _Nonnull)error;
- (void)OnLoadWithAd:(NAd * _Nonnull)ad width:(NSInteger)width height:(NSInteger)height;
- (void)OnShowFailWithAd:(NAd * _Nonnull)ad error:(NError * _Nonnull)error;
- (void)OnShowWithAd:(NAd * _Nonnull)ad;
@optional
- (void)OnClickWithAd:(NAd * _Nonnull)ad;
@required
- (void)OnCloseWithAd:(NAd * _Nonnull)ad;
@end

enum Position : NSInteger;
@class UIView;

SWIFT_CLASS("_TtC8NeftaSDK7NBanner")
@interface NBanner : NAd
@property (nonatomic) enum Position _position;
- (nonnull instancetype)initWithId:(NSString * _Nonnull)id parent:(UIView * _Nonnull)parent OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithId:(NSString * _Nonnull)id position:(enum Position)position OBJC_DESIGNATED_INITIALIZER;
- (void)SetAutoRefresh:(BOOL)autoRefresh;
- (UIView * _Nullable)GracefulShow SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)GetView SWIFT_WARN_UNUSED_RESULT;
- (void)Show;
- (void)Hide;
- (nonnull instancetype)initWithId:(NSString * _Nonnull)id SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, Position, open) {
  PositionNone = 0,
  PositionTop = 1,
  PositionBottom = 2,
};


SWIFT_PROTOCOL("_TtP8NeftaSDK15NBannerListener_")
@protocol NBannerListener <NAdListener>
@end


SWIFT_CLASS("_TtC8NeftaSDK6NError")
@interface NError : NSObject
@property (nonatomic, readonly) NSInteger _code;
@property (nonatomic, readonly, copy) NSString * _Nonnull _message;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC8NeftaSDK13NInterstitial")
@interface NInterstitial : NAd
- (nonnull instancetype)initWithId:(NSString * _Nonnull)id OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP8NeftaSDK21NInterstitialListener_")
@protocol NInterstitialListener <NAdListener>
@end


SWIFT_CLASS("_TtC8NeftaSDK9NRewarded")
@interface NRewarded : NAd
- (nonnull instancetype)initWithId:(NSString * _Nonnull)id OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP8NeftaSDK17NRewardedListener_")
@protocol NRewardedListener <NAdListener>
- (void)OnRewardWithAd:(NAd * _Nonnull)ad;
@end

enum ProgressionStatus : NSInteger;
enum ProgressionType : NSInteger;
enum ProgressionSource : NSInteger;
enum ResourceCategory : NSInteger;
enum ReceiveMethod : NSInteger;
enum SpendMethod : NSInteger;

SWIFT_CLASS("_TtC8NeftaSDK11NeftaEvents")
@interface NeftaEvents : NSObject
/// Record a progression event.
/// \param status Defines the progression outcome.
///
/// \param type Defines the type of progression.
///
/// \param source Defines content type of progression.
///
- (void)AddProgressionEventWithStatus:(enum ProgressionStatus)status type:(enum ProgressionType)type source:(enum ProgressionSource)source;
/// Record a progression event in full detail.
/// <blockquote>
/// Warning: value must be non negative.
///
/// </blockquote>
/// \param status Defines the progression outcome.
///
/// \param type Defines the type of progression.
///
/// \param source Defines content type of progression.
///
/// \param name Defines the specific named content of progression.
///
/// \param value Quantifiable progression step. Must be non-negative number.
///
- (void)AddProgressionEventWithStatus:(enum ProgressionStatus)status type:(enum ProgressionType)type source:(enum ProgressionSource)source name:(NSString * _Nullable)name value:(int64_t)value;
/// Record a progression event in full detail with custom data.
/// <blockquote>
/// Warning: value must be non negative.
///
/// </blockquote>
/// \param status Defines the progression outcome.
///
/// \param type Defines the type of progression.
///
/// \param source Defines content type of progression.
///
/// \param name Defines the specific named content of progression.
///
/// \param value Quantifiable progression step.
///
/// \param customPayload Any other custom data. Must be non-negative number.
///
- (void)AddProgressionEventWithStatus:(enum ProgressionStatus)status type:(enum ProgressionType)type source:(enum ProgressionSource)source name:(NSString * _Nullable)name value:(int64_t)value customPayload:(NSString * _Nullable)customPayload;
/// Record an event when the player receives any valuable.
/// \param category Defines the category of valuable the player obtained.
///
/// \param method Defines the source of obtained valuable.
///
- (void)AddReceiveEventWithCategory:(enum ResourceCategory)category method:(enum ReceiveMethod)method;
/// Record an event when the player receives any valuable in full detail.
/// <blockquote>
/// Warning: quantity must be non negative.
///
/// </blockquote>
/// \param category Defines the category of valuable the player obtained.
///
/// \param method Defines the source of obtained valuable.
///
/// \param name The name of received valuable.
///
/// \param quantity Received quantity. Must be non-negative number.
///
- (void)AddReceiveEventWithCategory:(enum ResourceCategory)category method:(enum ReceiveMethod)method name:(NSString * _Nullable)name quantity:(int64_t)quantity;
/// Record an event when the player receives any valuable in full detail with custom data.
/// <blockquote>
/// Warning: quantity must be non negative.
///
/// </blockquote>
/// \param category Defines the category of valuable the player obtained.
///
/// \param method Defines the source of obtained valuable.
///
/// \param name The name of received valuable.
///
/// \param quantity Received quantity. Must be non-negative number.
///
/// \param customPayload Any other custom data.
///
- (void)AddReceiveEventWithCategory:(enum ResourceCategory)category method:(enum ReceiveMethod)method name:(NSString * _Nullable)name quantity:(int64_t)quantity customPayload:(NSString * _Nullable)customPayload;
/// Record an event when the player spends any valuable.
/// \param category Defines the category of valuable the player spend.
///
/// \param method Defines the source spending.
///
- (void)AddSpendEventWithCategory:(enum ResourceCategory)category method:(enum SpendMethod)method;
/// Record an event when the player spends any valuable in full detail.
/// <blockquote>
/// Warning: quantity must be non negative.
///
/// </blockquote>
/// \param category Defines the category of valuable the player spend.
///
/// \param method Defines the source spending.
///
/// \param name The name of spent valuable.
///
/// \param quantity Spend quantity. Must be non-negative number.
///
- (void)AddSpendEventWithCategory:(enum ResourceCategory)category method:(enum SpendMethod)method name:(NSString * _Nullable)name quantity:(int64_t)quantity;
/// Record an event when the player spends any valuable in full detail with custom data.
/// <blockquote>
/// Warning: quantity must be non negative.
///
/// </blockquote>
/// \param category Defines the category of valuable the player spend.
///
/// \param method Defines the source spending.
///
/// \param name The name of received valuable.
///
/// \param quantity Received quantity. Must be non-negative number.
///
/// \param customPayload Any other custom data.
///
- (void)AddSpendEventWithCategory:(enum ResourceCategory)category method:(enum SpendMethod)method name:(NSString * _Nullable)name quantity:(int64_t)quantity customPayload:(NSString * _Nullable)customPayload;
/// Record an event when the player purchase an item with real world currency.
/// <blockquote>
/// Warning: price must be non negative.
///
/// </blockquote>
/// \param name The name of purchased product.
///
/// \param price The local price of the purchased product.
///
/// \param currency The ISO 4217 3-letter currency code (USD, EUR, GBP, ..) of purchase.
///
- (void)AddPurchaseEventWithName:(NSString * _Nonnull)name price:(NSDecimal)price currency:(NSString * _Nonnull)currency;
/// Record an event when the player purchase an item with real world currency with custom data.
/// <blockquote>
/// Warning: price must be non negative.
///
/// </blockquote>
/// \param name The name of purchased product.
///
/// \param price The local price of the purchased product.
///
/// \param currency The ISO 4217 3-letter currency code (USD, EUR, GBP, ..) of purchase.
///
/// \param customPayload Any other custom data.
///
- (void)AddPurchaseEventWithName:(NSString * _Nonnull)name price:(NSDecimal)price currency:(NSString * _Nonnull)currency customPayload:(NSString * _Nullable)customPayload;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, SessionCategory, open) {
  SessionCategorySessionStart = 0,
  SessionCategorySessionPause = 1,
  SessionCategoryAccountConnected = 2,
  SessionCategoryAccountUpgraded = 3,
};

typedef SWIFT_ENUM(NSInteger, ProgressionType, open) {
  ProgressionTypeAchievement = 0,
  ProgressionTypeGameplayUnit = 1,
  ProgressionTypeItemLevel = 2,
  ProgressionTypeUnlock = 3,
  ProgressionTypePlayerLevel = 4,
  ProgressionTypeTask = 5,
  ProgressionTypeOther = 6,
};

typedef SWIFT_ENUM(NSInteger, ProgressionStatus, open) {
  ProgressionStatusStart = 0,
  ProgressionStatusComplete = 1,
  ProgressionStatusFail = 2,
};

typedef SWIFT_ENUM(NSInteger, ProgressionSource, open) {
  ProgressionSourceUndefined = 0,
  ProgressionSourceCoreContent = 1,
  ProgressionSourceOptionalContent = 2,
  ProgressionSourceBoss = 3,
  ProgressionSourceSocial = 4,
  ProgressionSourceSpecialEvent = 5,
  ProgressionSourceOther = 6,
};

typedef SWIFT_ENUM(NSInteger, ResourceCategory, open) {
  ResourceCategoryOther = 0,
  ResourceCategorySoftCurrency = 1,
  ResourceCategoryPremiumCurrency = 2,
  ResourceCategoryResource = 3,
  ResourceCategoryConsumable = 4,
  ResourceCategoryCosmeticItem = 5,
  ResourceCategoryCoreItem = 6,
  ResourceCategoryChest = 7,
  ResourceCategoryExperience = 8,
};

typedef SWIFT_ENUM(NSInteger, ReceiveMethod, open) {
  ReceiveMethodUndefined = 0,
  ReceiveMethodLevelEnd = 1,
  ReceiveMethodReward = 2,
  ReceiveMethodLoot = 3,
  ReceiveMethodShop = 4,
  ReceiveMethodIap = 5,
  ReceiveMethodCreate = 6,
  ReceiveMethodOther = 7,
};

typedef SWIFT_ENUM(NSInteger, SpendMethod, open) {
  SpendMethodUndefined = 0,
  SpendMethodBoost = 1,
  SpendMethodContinuity = 2,
  SpendMethodCreate = 3,
  SpendMethodUnlock = 4,
  SpendMethodUpgrade = 5,
  SpendMethodShop = 6,
  SpendMethodOther = 7,
};

@class UIViewController;
@class NSMutableDictionary;

SWIFT_CLASS("_TtC8NeftaSDK11NeftaPlugin")
@interface NeftaPlugin : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull Version;)
+ (NSString * _Nonnull)Version SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) NeftaEvents * _Nonnull Events;
@property (nonatomic, copy) void (^ _Nullable OnReady)(NSDictionary<NSString *, Placement *> * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable OnBehaviourInsight)(NSDictionary<NSString *, Insight *> * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable OnBehaviourInsightAsString)(NSString * _Nonnull);
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) void (^ _Nullable OnLog)(NSString * _Nonnull);)
+ (void (^ _Nullable)(NSString * _Nonnull))OnLog SWIFT_WARN_UNUSED_RESULT;
+ (void)setOnLog:(void (^ _Nullable)(NSString * _Nonnull))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NeftaPlugin * _Null_unspecified _instance;)
+ (NeftaPlugin * _Null_unspecified)_instance SWIFT_WARN_UNUSED_RESULT;
+ (void)set_instance:(NeftaPlugin * _Null_unspecified)value;
+ (void)EnableLogging:(BOOL)enable;
+ (NeftaPlugin * _Nonnull)InitWithAppId:(NSString * _Nonnull)appId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)SetTrackingWithIsAuthorized:(BOOL)isAuthorized;
- (void)PrepareRendererWithViewController:(UIViewController * _Nonnull)viewController;
- (void)RecordWithType:(NSInteger)type category:(NSInteger)category subCategory:(NSInteger)subCategory name:(NSString * _Nullable)name value:(int64_t)value customPayload:(NSString * _Nullable)customPayload;
- (void)SetPublisherUserIdWithId:(NSString * _Nonnull)id;
- (void)GetBehaviourInsightWithString:(NSString * _Nonnull)string;
- (void)GetBehaviourInsight:(NSArray<NSString *> * _Nonnull)insightList;
- (NSString * _Nonnull)GetNuidWithPresent:(BOOL)present SWIFT_WARN_UNUSED_RESULT;
+ (void)OnExternalAdShown:(NSString * _Nonnull)path data:(NSMutableDictionary * _Nonnull)data;
+ (void)OnExternalAdShownAsString:(NSString * _Nonnull)path data:(NSString * _Nonnull)data;
- (void)SetOverrideWithUrl:(NSString * _Nullable)url;
@end


SWIFT_CLASS("_TtC8NeftaSDK9Placement")
@interface Placement : NSObject
@property (nonatomic, copy) NSString * _Nonnull _id;
@property (nonatomic) NSInteger _width;
@property (nonatomic) NSInteger _height;
@property (nonatomic) enum Types _type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, Types, open) {
  TypesUninitialized = 0,
  TypesBanner = 1,
  TypesInterstitial = 2,
  TypesRewarded = 3,
};




SWIFT_CLASS("_TtC8NeftaSDK12UnityWrapper")
@interface UnityWrapper : NSObject
@property (nonatomic, copy) void (^ _Nullable IOnReady)(NSString * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable IOnBid)(NSString * _Nonnull, float, NSInteger);
@property (nonatomic, copy) void (^ _Nullable IOnLoadStart)(NSString * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable IOnLoadFail)(NSString * _Nonnull, NSInteger, NSString * _Nullable);
@property (nonatomic, copy) void (^ _Nullable IOnLoad)(NSString * _Nonnull, NSInteger, NSInteger);
@property (nonatomic, copy) void (^ _Nullable IOnShowFail)(NSString * _Nonnull, NSInteger, NSString * _Nullable);
@property (nonatomic, copy) void (^ _Nullable IOnShow)(NSString * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable IOnClick)(NSString * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable IOnClose)(NSString * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable IOnReward)(NSString * _Nonnull);
@property (nonatomic, readonly, strong) NeftaPlugin * _Nonnull _plugin;
- (nonnull instancetype)initWithAppId:(NSString * _Nonnull)appId OBJC_DESIGNATED_INITIALIZER;
- (void)SetFloorPriceWithId:(NSString * _Nonnull)id floorPrice:(float)floorPrice;
- (void)SetCustomParameterWithId:(NSString * _Nonnull)id provider:(NSString * _Nonnull)provider value:(NSString * _Nonnull)value;
- (void)MuteWithId:(NSString * _Nonnull)id mute:(BOOL)mute;
- (void)CreateBannerWithId:(NSString * _Nonnull)id position:(NSInteger)position autoRefresh:(BOOL)autoRefresh;
- (void)BidWithId:(NSString * _Nonnull)id;
- (NSString * _Nullable)GetPartialBidRequestAsString:(NSString * _Nonnull)id SWIFT_WARN_UNUSED_RESULT;
- (void)LoadWithId:(NSString * _Nonnull)id;
- (void)LoadWithBidResponseWithId:(NSString * _Nonnull)id bidResponse:(NSData * _Nonnull)bidResponse;
- (NSInteger)CanShowWithId:(NSString * _Nonnull)id SWIFT_WARN_UNUSED_RESULT;
- (void)ShowWithId:(NSString * _Nonnull)id;
- (void)HideWithId:(NSString * _Nonnull)id;
- (void)CloseWithId:(NSString * _Nonnull)id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSCoder;
@class WKWebView;
@class WKNavigation;
@class WKNavigationAction;
@class WKWebViewConfiguration;
@class WKWindowFeatures;
@class WKUserContentController;
@class WKScriptMessage;
@class UIGestureRecognizer;

SWIFT_CLASS("_TtC8NeftaSDK13WebController")
@interface WebController : UIView <UIGestureRecognizerDelegate, WKNavigationDelegate, WKScriptMessageHandler, WKUIDelegate>
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
- (void)didMoveToSuperview;
- (void)webView:(WKWebView * _Nonnull)webView didFailNavigation:(WKNavigation * _Null_unspecified)navigation withError:(NSError * _Nonnull)error;
- (void)webView:(WKWebView * _Nonnull)webView didFailProvisionalNavigation:(WKNavigation * _Null_unspecified)navigation withError:(NSError * _Nonnull)error;
- (void)webView:(WKWebView * _Nonnull)webView didFinishNavigation:(WKNavigation * _Null_unspecified)navigation;
- (void)webView:(WKWebView * _Nonnull)webView decidePolicyForNavigationAction:(WKNavigationAction * _Nonnull)navigationAction decisionHandler:(void (^ _Nonnull)(WKNavigationActionPolicy))decisionHandler;
- (WKWebView * _Nullable)webView:(WKWebView * _Nonnull)webView createWebViewWithConfiguration:(WKWebViewConfiguration * _Nonnull)configuration forNavigationAction:(WKNavigationAction * _Nonnull)navigationAction windowFeatures:(WKWindowFeatures * _Nonnull)windowFeatures SWIFT_WARN_UNUSED_RESULT;
- (void)userContentController:(WKUserContentController * _Nonnull)userContentController didReceiveScriptMessage:(WKScriptMessage * _Nonnull)message;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
#ifndef NEFTASDK_SWIFT_H
#define NEFTASDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="NeftaSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;

SWIFT_CLASS("_TtC8NeftaSDK11BidResponse")
@interface BidResponse : NSObject
@property (nonatomic, copy) NSString * _Null_unspecified _id;
@property (nonatomic) float _price;
@property (nonatomic, copy) NSString * _Nullable _campaignId;
@property (nonatomic, copy) NSString * _Nullable _creativeId;
- (BOOL)IsExpired SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8NeftaSDK7Insight")
@interface Insight : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable _status;
@property (nonatomic, readonly) int64_t _int;
@property (nonatomic, readonly) double _float;
@property (nonatomic, readonly, copy) NSString * _Nullable _string;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum Types : NSInteger;
@class Placement;
@protocol NAdListener;
@class NSData;

SWIFT_CLASS("_TtC8NeftaSDK3NAd")
@interface NAd : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger Request;)
+ (NSInteger)Request SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger Initialized;)
+ (NSInteger)Initialized SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger Bidding;)
+ (NSInteger)Bidding SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger ReadyToLoad;)
+ (NSInteger)ReadyToLoad SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger Loading;)
+ (NSInteger)Loading SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger Ready;)
+ (NSInteger)Ready SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger Showing;)
+ (NSInteger)Showing SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger Hidden;)
+ (NSInteger)Hidden SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger Expired;)
+ (NSInteger)Expired SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) NSString * _Nonnull _id;
@property (nonatomic) enum Types _type;
@property (nonatomic, strong) Placement * _Nullable _placement;
@property (nonatomic, strong) BidResponse * _Nullable _bid;
@property (nonatomic) NSInteger _state;
@property (nonatomic) int64_t _stateStart;
@property (nonatomic, strong) id <NAdListener> _Nullable _listener;
- (nonnull instancetype)initWithId:(NSString * _Nonnull)id OBJC_DESIGNATED_INITIALIZER;
- (NSInteger)CanShow SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, id> * _Nonnull)GetPartialBidRequest SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)GetPartialBidRequestAsString SWIFT_WARN_UNUSED_RESULT;
- (void)Bid;
- (void)LoadWithBidResponseWithBidResponse:(NSData * _Nonnull)bidResponse;
- (void)Load;
- (void)ShowThreaded;
- (void)Show;
- (void)CloseThreaded;
- (void)Close;
- (void)SetFloorPriceWithFloorPrice:(float)floorPrice;
- (void)SetCustomParameterWithProvider:(NSString * _Nonnull)provider value:(NSString * _Nonnull)value;
- (void)Mute:(BOOL)mute;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NError;

SWIFT_PROTOCOL("_TtP8NeftaSDK11NAdListener_")
@protocol NAdListener <NSObject>
@optional
- (void)OnBidWithAd:(NAd * _Nonnull)ad bidResponse:(BidResponse * _Nullable)bidResponse error:(NError * _Nullable)error;
- (void)OnLoadStartWithAd:(NAd * _Nonnull)ad;
@required
- (void)OnLoadFailWithAd:(NAd * _Nonnull)ad error:(NError * _Nonnull)error;
- (void)OnLoadWithAd:(NAd * _Nonnull)ad width:(NSInteger)width height:(NSInteger)height;
- (void)OnShowFailWithAd:(NAd * _Nonnull)ad error:(NError * _Nonnull)error;
- (void)OnShowWithAd:(NAd * _Nonnull)ad;
@optional
- (void)OnClickWithAd:(NAd * _Nonnull)ad;
@required
- (void)OnCloseWithAd:(NAd * _Nonnull)ad;
@end

enum Position : NSInteger;
@class UIView;

SWIFT_CLASS("_TtC8NeftaSDK7NBanner")
@interface NBanner : NAd
@property (nonatomic) enum Position _position;
- (nonnull instancetype)initWithId:(NSString * _Nonnull)id parent:(UIView * _Nonnull)parent OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithId:(NSString * _Nonnull)id position:(enum Position)position OBJC_DESIGNATED_INITIALIZER;
- (void)SetAutoRefresh:(BOOL)autoRefresh;
- (UIView * _Nullable)GracefulShow SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)GetView SWIFT_WARN_UNUSED_RESULT;
- (void)Show;
- (void)Hide;
- (nonnull instancetype)initWithId:(NSString * _Nonnull)id SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, Position, open) {
  PositionNone = 0,
  PositionTop = 1,
  PositionBottom = 2,
};


SWIFT_PROTOCOL("_TtP8NeftaSDK15NBannerListener_")
@protocol NBannerListener <NAdListener>
@end


SWIFT_CLASS("_TtC8NeftaSDK6NError")
@interface NError : NSObject
@property (nonatomic, readonly) NSInteger _code;
@property (nonatomic, readonly, copy) NSString * _Nonnull _message;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC8NeftaSDK13NInterstitial")
@interface NInterstitial : NAd
- (nonnull instancetype)initWithId:(NSString * _Nonnull)id OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP8NeftaSDK21NInterstitialListener_")
@protocol NInterstitialListener <NAdListener>
@end


SWIFT_CLASS("_TtC8NeftaSDK9NRewarded")
@interface NRewarded : NAd
- (nonnull instancetype)initWithId:(NSString * _Nonnull)id OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP8NeftaSDK17NRewardedListener_")
@protocol NRewardedListener <NAdListener>
- (void)OnRewardWithAd:(NAd * _Nonnull)ad;
@end

enum ProgressionStatus : NSInteger;
enum ProgressionType : NSInteger;
enum ProgressionSource : NSInteger;
enum ResourceCategory : NSInteger;
enum ReceiveMethod : NSInteger;
enum SpendMethod : NSInteger;

SWIFT_CLASS("_TtC8NeftaSDK11NeftaEvents")
@interface NeftaEvents : NSObject
/// Record a progression event.
/// \param status Defines the progression outcome.
///
/// \param type Defines the type of progression.
///
/// \param source Defines content type of progression.
///
- (void)AddProgressionEventWithStatus:(enum ProgressionStatus)status type:(enum ProgressionType)type source:(enum ProgressionSource)source;
/// Record a progression event in full detail.
/// <blockquote>
/// Warning: value must be non negative.
///
/// </blockquote>
/// \param status Defines the progression outcome.
///
/// \param type Defines the type of progression.
///
/// \param source Defines content type of progression.
///
/// \param name Defines the specific named content of progression.
///
/// \param value Quantifiable progression step. Must be non-negative number.
///
- (void)AddProgressionEventWithStatus:(enum ProgressionStatus)status type:(enum ProgressionType)type source:(enum ProgressionSource)source name:(NSString * _Nullable)name value:(int64_t)value;
/// Record a progression event in full detail with custom data.
/// <blockquote>
/// Warning: value must be non negative.
///
/// </blockquote>
/// \param status Defines the progression outcome.
///
/// \param type Defines the type of progression.
///
/// \param source Defines content type of progression.
///
/// \param name Defines the specific named content of progression.
///
/// \param value Quantifiable progression step.
///
/// \param customPayload Any other custom data. Must be non-negative number.
///
- (void)AddProgressionEventWithStatus:(enum ProgressionStatus)status type:(enum ProgressionType)type source:(enum ProgressionSource)source name:(NSString * _Nullable)name value:(int64_t)value customPayload:(NSString * _Nullable)customPayload;
/// Record an event when the player receives any valuable.
/// \param category Defines the category of valuable the player obtained.
///
/// \param method Defines the source of obtained valuable.
///
- (void)AddReceiveEventWithCategory:(enum ResourceCategory)category method:(enum ReceiveMethod)method;
/// Record an event when the player receives any valuable in full detail.
/// <blockquote>
/// Warning: quantity must be non negative.
///
/// </blockquote>
/// \param category Defines the category of valuable the player obtained.
///
/// \param method Defines the source of obtained valuable.
///
/// \param name The name of received valuable.
///
/// \param quantity Received quantity. Must be non-negative number.
///
- (void)AddReceiveEventWithCategory:(enum ResourceCategory)category method:(enum ReceiveMethod)method name:(NSString * _Nullable)name quantity:(int64_t)quantity;
/// Record an event when the player receives any valuable in full detail with custom data.
/// <blockquote>
/// Warning: quantity must be non negative.
///
/// </blockquote>
/// \param category Defines the category of valuable the player obtained.
///
/// \param method Defines the source of obtained valuable.
///
/// \param name The name of received valuable.
///
/// \param quantity Received quantity. Must be non-negative number.
///
/// \param customPayload Any other custom data.
///
- (void)AddReceiveEventWithCategory:(enum ResourceCategory)category method:(enum ReceiveMethod)method name:(NSString * _Nullable)name quantity:(int64_t)quantity customPayload:(NSString * _Nullable)customPayload;
/// Record an event when the player spends any valuable.
/// \param category Defines the category of valuable the player spend.
///
/// \param method Defines the source spending.
///
- (void)AddSpendEventWithCategory:(enum ResourceCategory)category method:(enum SpendMethod)method;
/// Record an event when the player spends any valuable in full detail.
/// <blockquote>
/// Warning: quantity must be non negative.
///
/// </blockquote>
/// \param category Defines the category of valuable the player spend.
///
/// \param method Defines the source spending.
///
/// \param name The name of spent valuable.
///
/// \param quantity Spend quantity. Must be non-negative number.
///
- (void)AddSpendEventWithCategory:(enum ResourceCategory)category method:(enum SpendMethod)method name:(NSString * _Nullable)name quantity:(int64_t)quantity;
/// Record an event when the player spends any valuable in full detail with custom data.
/// <blockquote>
/// Warning: quantity must be non negative.
///
/// </blockquote>
/// \param category Defines the category of valuable the player spend.
///
/// \param method Defines the source spending.
///
/// \param name The name of received valuable.
///
/// \param quantity Received quantity. Must be non-negative number.
///
/// \param customPayload Any other custom data.
///
- (void)AddSpendEventWithCategory:(enum ResourceCategory)category method:(enum SpendMethod)method name:(NSString * _Nullable)name quantity:(int64_t)quantity customPayload:(NSString * _Nullable)customPayload;
/// Record an event when the player purchase an item with real world currency.
/// <blockquote>
/// Warning: price must be non negative.
///
/// </blockquote>
/// \param name The name of purchased product.
///
/// \param price The local price of the purchased product.
///
/// \param currency The ISO 4217 3-letter currency code (USD, EUR, GBP, ..) of purchase.
///
- (void)AddPurchaseEventWithName:(NSString * _Nonnull)name price:(NSDecimal)price currency:(NSString * _Nonnull)currency;
/// Record an event when the player purchase an item with real world currency with custom data.
/// <blockquote>
/// Warning: price must be non negative.
///
/// </blockquote>
/// \param name The name of purchased product.
///
/// \param price The local price of the purchased product.
///
/// \param currency The ISO 4217 3-letter currency code (USD, EUR, GBP, ..) of purchase.
///
/// \param customPayload Any other custom data.
///
- (void)AddPurchaseEventWithName:(NSString * _Nonnull)name price:(NSDecimal)price currency:(NSString * _Nonnull)currency customPayload:(NSString * _Nullable)customPayload;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, SessionCategory, open) {
  SessionCategorySessionStart = 0,
  SessionCategorySessionPause = 1,
  SessionCategoryAccountConnected = 2,
  SessionCategoryAccountUpgraded = 3,
};

typedef SWIFT_ENUM(NSInteger, ProgressionType, open) {
  ProgressionTypeAchievement = 0,
  ProgressionTypeGameplayUnit = 1,
  ProgressionTypeItemLevel = 2,
  ProgressionTypeUnlock = 3,
  ProgressionTypePlayerLevel = 4,
  ProgressionTypeTask = 5,
  ProgressionTypeOther = 6,
};

typedef SWIFT_ENUM(NSInteger, ProgressionStatus, open) {
  ProgressionStatusStart = 0,
  ProgressionStatusComplete = 1,
  ProgressionStatusFail = 2,
};

typedef SWIFT_ENUM(NSInteger, ProgressionSource, open) {
  ProgressionSourceUndefined = 0,
  ProgressionSourceCoreContent = 1,
  ProgressionSourceOptionalContent = 2,
  ProgressionSourceBoss = 3,
  ProgressionSourceSocial = 4,
  ProgressionSourceSpecialEvent = 5,
  ProgressionSourceOther = 6,
};

typedef SWIFT_ENUM(NSInteger, ResourceCategory, open) {
  ResourceCategoryOther = 0,
  ResourceCategorySoftCurrency = 1,
  ResourceCategoryPremiumCurrency = 2,
  ResourceCategoryResource = 3,
  ResourceCategoryConsumable = 4,
  ResourceCategoryCosmeticItem = 5,
  ResourceCategoryCoreItem = 6,
  ResourceCategoryChest = 7,
  ResourceCategoryExperience = 8,
};

typedef SWIFT_ENUM(NSInteger, ReceiveMethod, open) {
  ReceiveMethodUndefined = 0,
  ReceiveMethodLevelEnd = 1,
  ReceiveMethodReward = 2,
  ReceiveMethodLoot = 3,
  ReceiveMethodShop = 4,
  ReceiveMethodIap = 5,
  ReceiveMethodCreate = 6,
  ReceiveMethodOther = 7,
};

typedef SWIFT_ENUM(NSInteger, SpendMethod, open) {
  SpendMethodUndefined = 0,
  SpendMethodBoost = 1,
  SpendMethodContinuity = 2,
  SpendMethodCreate = 3,
  SpendMethodUnlock = 4,
  SpendMethodUpgrade = 5,
  SpendMethodShop = 6,
  SpendMethodOther = 7,
};

@class UIViewController;
@class NSMutableDictionary;

SWIFT_CLASS("_TtC8NeftaSDK11NeftaPlugin")
@interface NeftaPlugin : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull Version;)
+ (NSString * _Nonnull)Version SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) NeftaEvents * _Nonnull Events;
@property (nonatomic, copy) void (^ _Nullable OnReady)(NSDictionary<NSString *, Placement *> * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable OnBehaviourInsight)(NSDictionary<NSString *, Insight *> * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable OnBehaviourInsightAsString)(NSString * _Nonnull);
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) void (^ _Nullable OnLog)(NSString * _Nonnull);)
+ (void (^ _Nullable)(NSString * _Nonnull))OnLog SWIFT_WARN_UNUSED_RESULT;
+ (void)setOnLog:(void (^ _Nullable)(NSString * _Nonnull))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NeftaPlugin * _Null_unspecified _instance;)
+ (NeftaPlugin * _Null_unspecified)_instance SWIFT_WARN_UNUSED_RESULT;
+ (void)set_instance:(NeftaPlugin * _Null_unspecified)value;
+ (void)EnableLogging:(BOOL)enable;
+ (NeftaPlugin * _Nonnull)InitWithAppId:(NSString * _Nonnull)appId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)SetTrackingWithIsAuthorized:(BOOL)isAuthorized;
- (void)PrepareRendererWithViewController:(UIViewController * _Nonnull)viewController;
- (void)RecordWithType:(NSInteger)type category:(NSInteger)category subCategory:(NSInteger)subCategory name:(NSString * _Nullable)name value:(int64_t)value customPayload:(NSString * _Nullable)customPayload;
- (void)SetPublisherUserIdWithId:(NSString * _Nonnull)id;
- (void)GetBehaviourInsightWithString:(NSString * _Nonnull)string;
- (void)GetBehaviourInsight:(NSArray<NSString *> * _Nonnull)insightList;
- (NSString * _Nonnull)GetNuidWithPresent:(BOOL)present SWIFT_WARN_UNUSED_RESULT;
+ (void)OnExternalAdShown:(NSString * _Nonnull)path data:(NSMutableDictionary * _Nonnull)data;
+ (void)OnExternalAdShownAsString:(NSString * _Nonnull)path data:(NSString * _Nonnull)data;
- (void)SetOverrideWithUrl:(NSString * _Nullable)url;
@end


SWIFT_CLASS("_TtC8NeftaSDK9Placement")
@interface Placement : NSObject
@property (nonatomic, copy) NSString * _Nonnull _id;
@property (nonatomic) NSInteger _width;
@property (nonatomic) NSInteger _height;
@property (nonatomic) enum Types _type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, Types, open) {
  TypesUninitialized = 0,
  TypesBanner = 1,
  TypesInterstitial = 2,
  TypesRewarded = 3,
};




SWIFT_CLASS("_TtC8NeftaSDK12UnityWrapper")
@interface UnityWrapper : NSObject
@property (nonatomic, copy) void (^ _Nullable IOnReady)(NSString * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable IOnBid)(NSString * _Nonnull, float, NSInteger);
@property (nonatomic, copy) void (^ _Nullable IOnLoadStart)(NSString * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable IOnLoadFail)(NSString * _Nonnull, NSInteger, NSString * _Nullable);
@property (nonatomic, copy) void (^ _Nullable IOnLoad)(NSString * _Nonnull, NSInteger, NSInteger);
@property (nonatomic, copy) void (^ _Nullable IOnShowFail)(NSString * _Nonnull, NSInteger, NSString * _Nullable);
@property (nonatomic, copy) void (^ _Nullable IOnShow)(NSString * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable IOnClick)(NSString * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable IOnClose)(NSString * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable IOnReward)(NSString * _Nonnull);
@property (nonatomic, readonly, strong) NeftaPlugin * _Nonnull _plugin;
- (nonnull instancetype)initWithAppId:(NSString * _Nonnull)appId OBJC_DESIGNATED_INITIALIZER;
- (void)SetFloorPriceWithId:(NSString * _Nonnull)id floorPrice:(float)floorPrice;
- (void)SetCustomParameterWithId:(NSString * _Nonnull)id provider:(NSString * _Nonnull)provider value:(NSString * _Nonnull)value;
- (void)MuteWithId:(NSString * _Nonnull)id mute:(BOOL)mute;
- (void)CreateBannerWithId:(NSString * _Nonnull)id position:(NSInteger)position autoRefresh:(BOOL)autoRefresh;
- (void)BidWithId:(NSString * _Nonnull)id;
- (NSString * _Nullable)GetPartialBidRequestAsString:(NSString * _Nonnull)id SWIFT_WARN_UNUSED_RESULT;
- (void)LoadWithId:(NSString * _Nonnull)id;
- (void)LoadWithBidResponseWithId:(NSString * _Nonnull)id bidResponse:(NSData * _Nonnull)bidResponse;
- (NSInteger)CanShowWithId:(NSString * _Nonnull)id SWIFT_WARN_UNUSED_RESULT;
- (void)ShowWithId:(NSString * _Nonnull)id;
- (void)HideWithId:(NSString * _Nonnull)id;
- (void)CloseWithId:(NSString * _Nonnull)id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSCoder;
@class WKWebView;
@class WKNavigation;
@class WKNavigationAction;
@class WKWebViewConfiguration;
@class WKWindowFeatures;
@class WKUserContentController;
@class WKScriptMessage;
@class UIGestureRecognizer;

SWIFT_CLASS("_TtC8NeftaSDK13WebController")
@interface WebController : UIView <UIGestureRecognizerDelegate, WKNavigationDelegate, WKScriptMessageHandler, WKUIDelegate>
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
- (void)didMoveToSuperview;
- (void)webView:(WKWebView * _Nonnull)webView didFailNavigation:(WKNavigation * _Null_unspecified)navigation withError:(NSError * _Nonnull)error;
- (void)webView:(WKWebView * _Nonnull)webView didFailProvisionalNavigation:(WKNavigation * _Null_unspecified)navigation withError:(NSError * _Nonnull)error;
- (void)webView:(WKWebView * _Nonnull)webView didFinishNavigation:(WKNavigation * _Null_unspecified)navigation;
- (void)webView:(WKWebView * _Nonnull)webView decidePolicyForNavigationAction:(WKNavigationAction * _Nonnull)navigationAction decisionHandler:(void (^ _Nonnull)(WKNavigationActionPolicy))decisionHandler;
- (WKWebView * _Nullable)webView:(WKWebView * _Nonnull)webView createWebViewWithConfiguration:(WKWebViewConfiguration * _Nonnull)configuration forNavigationAction:(WKNavigationAction * _Nonnull)navigationAction windowFeatures:(WKWindowFeatures * _Nonnull)windowFeatures SWIFT_WARN_UNUSED_RESULT;
- (void)userContentController:(WKUserContentController * _Nonnull)userContentController didReceiveScriptMessage:(WKScriptMessage * _Nonnull)message;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
