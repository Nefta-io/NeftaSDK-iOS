// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
// swift-module-flags: -target arm64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -enable-bare-slash-regex -module-name NeftaSDK
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import AVKit
import AdSupport
import CoreTelephony
import DeveloperToolsSupport
import Foundation
@_exported import NeftaSDK
import StoreKit
import Swift
import SwiftUI
import SystemConfiguration
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
import os
@_hasMissingDesignatedInitializers @objc public class NError : ObjectiveC.NSObject {
  @objc public enum Code : Swift.Int {
    case Unknown = 0
    case Request = 100
    case InvalidState = 101
    case Expired = 102
    case Network = 200
    case Timeout = 201
    case Response = 300
    case NoFill = 301
    case Parse = 302
    public init?(rawValue: Swift.Int)
    public typealias RawValue = Swift.Int
    public var rawValue: Swift.Int {
      get
    }
  }
  @objc final public let _code: Swift.Int
  @objc final public let _message: Swift.String
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc public class Insight : ObjectiveC.NSObject {
  @objc final public let _int: Swift.Int64
  @objc final public let _float: Swift.Float64
  @objc final public let _string: Swift.String?
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc public class Placement : ObjectiveC.NSObject {
  @objc public enum Types : Swift.Int, Swift.CustomStringConvertible {
    case Uninitialized = 0
    case Banner = 1
    case Interstitial = 2
    case Rewarded = 3
    public var description: Swift.String {
      get
    }
    public init?(rawValue: Swift.Int)
    public typealias RawValue = Swift.Int
    public var rawValue: Swift.Int {
      get
    }
  }
  @objc public var _id: Swift.String
  @objc public var _width: Swift.Int
  @objc public var _height: Swift.Int
  @objc public var _type: NeftaSDK.Placement.Types
  @objc deinit
}
@objc public protocol NAdListener : ObjectiveC.NSObjectProtocol {
  @objc optional func OnBid(ad: NeftaSDK.NAd, bidResponse: NeftaSDK.BidResponse?, error: NeftaSDK.NError?)
  @objc optional func OnLoadStart(ad: NeftaSDK.NAd)
  @objc func OnLoadFail(ad: NeftaSDK.NAd, error: NeftaSDK.NError)
  @objc func OnLoad(ad: NeftaSDK.NAd, width: Swift.Int, height: Swift.Int)
  @objc func OnShowFail(ad: NeftaSDK.NAd, error: NeftaSDK.NError)
  @objc func OnShow(ad: NeftaSDK.NAd)
  @objc optional func OnClick(ad: NeftaSDK.NAd)
  @objc func OnClose(ad: NeftaSDK.NAd)
}
@objc public class NAd : ObjectiveC.NSObject {
  @objc public static let Request: Swift.Int
  @objc public static let Initialized: Swift.Int
  @objc public static let Bidding: Swift.Int
  @objc public static let ReadyToLoad: Swift.Int
  @objc public static let Loading: Swift.Int
  @objc public static let Ready: Swift.Int
  @objc public static let Showing: Swift.Int
  @objc public static let Hidden: Swift.Int
  @objc public static let Expired: Swift.Int
  @objc public var _id: Swift.String
  @objc public var _type: NeftaSDK.Placement.Types
  @objc public var _placement: NeftaSDK.Placement?
  @objc public var _bid: NeftaSDK.BidResponse?
  @objc public var _state: Swift.Int
  @objc public var _stateStart: Swift.Int64
  @objc public var _listener: (any NeftaSDK.NAdListener)?
  @objc public init(id: Swift.String)
  @objc public func CanShow() -> Swift.Int
  @objc public func GetPartialBidRequest() -> [Swift.String : Any]
  @objc public func GetPartialBidRequestAsString() -> Swift.String
  @objc public func Bid()
  @objc public func LoadWithBidResponse(bidResponse: Foundation.Data)
  @objc public func Load()
  @objc(ShowThreaded:) public func ShowThreaded(viewController: UIKit.UIViewController)
  @objc(Show:) public func Show(viewController: UIKit.UIViewController?)
  @objc public func CloseThreaded()
  @objc public func Close()
  @objc public func SetFloorPrice(floorPrice: Swift.Float)
  @objc public func SetCustomParameter(provider: Swift.String, value: Swift.String)
  @objc public func Mute(_ mute: Swift.Bool)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class NInterstitial : NeftaSDK.NAd {
  @objc override public init(id: Swift.String)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class BidResponse : ObjectiveC.NSObject {
  @objc public var _auctionId: Swift.String?
  @objc public var _id: Swift.String!
  @objc public var _price: Swift.Float
  @objc public var _campaignId: Swift.String?
  @objc public var _creativeId: Swift.String?
  @objc public func IsExpired() -> Swift.Bool
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class NeftaPlugin : ObjectiveC.NSObject {
  @_hasMissingDesignatedInitializers public class Info {
    public var _appId: Swift.String?
    public var _bundleId: Swift.String
    public var _bundleVersion: Swift.String
    public var _model: Swift.String?
    @objc deinit
  }
  @_hasMissingDesignatedInitializers public class State {
    public var _nuid: Swift.String
    @objc deinit
  }
  public typealias OnReadyBlock = (([Swift.String : NeftaSDK.Placement]) -> Swift.Void)
  public typealias OnBehaviourInsightBlock = (([Swift.String : NeftaSDK.Insight]) -> Swift.Void)
  public typealias OnBehaviourInsightAsStringBlock = ((Swift.Int, Swift.String) -> Swift.Void)
  public typealias OnLogBlock = ((Swift.String) -> Swift.Void)
  @objc public static let Version: Swift.String
  @objc public static let ContentRating_Unspecified: Swift.String
  @objc public static let ContentRating_General: Swift.String
  @objc public static let ContentRating_ParentalGuidance: Swift.String
  @objc public static let ContentRating_Teen: Swift.String
  @objc public static let ContentRating_MatureAudience: Swift.String
  final public let _info: NeftaSDK.NeftaPlugin.Info
  final public let _state: NeftaSDK.NeftaPlugin.State
  public static var _rtbUrl: Swift.String
  public var _cachedInitRespose: Foundation.Data?
  @objc public var Events: NeftaSDK.NeftaEvents
  public var _placements: [Swift.String : NeftaSDK.Placement]!
  public var _ads: [NeftaSDK.NAd]
  @objc public var OnReady: NeftaSDK.NeftaPlugin.OnReadyBlock?
  @objc public var OnBehaviourInsight: NeftaSDK.NeftaPlugin.OnBehaviourInsightBlock?
  @objc public var OnBehaviourInsightAsString: NeftaSDK.NeftaPlugin.OnBehaviourInsightAsStringBlock?
  @objc public static var OnLog: NeftaSDK.NeftaPlugin.OnLogBlock?
  @objc public static var _instance: NeftaSDK.NeftaPlugin!
  @objc(EnableLogging:) public static func EnableLogging(enable: Swift.Bool)
  @objc public static func Init(appId: Swift.String) -> NeftaSDK.NeftaPlugin
  @objc public func SetContentRating(rating: Swift.String)
  @objc public func SetTracking(isAuthorized: Swift.Bool)
  public static func SetDebugTime(offset: Swift.Int)
  @objc public func Record(type: Swift.Int, category: Swift.Int, subCategory: Swift.Int, name: Swift.String?, value: Swift.Int64, customPayload: Swift.String?)
  @objc public func SetPublisherUserId(id: Swift.String)
  @objc(GetBehaviourInsightBridge:string:) public func GetBehaviourInsightBridge(requestId: Swift.Int, string: Swift.String)
  @objc public func GetBehaviourInsight(_ insightList: [Swift.String])
  @objc public func GetBehaviourInsight(_ insightList: [Swift.String], callback: @escaping NeftaSDK.NeftaPlugin.OnBehaviourInsightBlock)
  @objc public func GetNuid(present: Swift.Bool) -> Swift.String
  @objc public static func OnExternalMediationRequest(_ provider: Swift.String, adType: Swift.Int, recommendedAdUnitId: Swift.String?, requestedFloorPrice: Swift.Float64, calculatedFloorPrice: Swift.Float64, adUnitId: Swift.String?, revenue: Swift.Float64, precision: Swift.String?, status: Swift.Int, providerStatus: Swift.String?, networkStatus: Swift.String?)
  @objc public static func OnExternalMediationImpression(_ path: Swift.String, data: Foundation.NSMutableDictionary)
  @objc public static func OnExternalMediationImpressionAsString(_ path: Swift.String, data: Swift.String)
  @objc public static func SetOverride(url: Swift.String?)
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc public class NeftaEvents : ObjectiveC.NSObject {
  @objc public enum SessionCategory : Swift.Int {
    case SessionStart = 0
    case SessionPause = 1
    case AccountConnected = 2
    case AccountUpgraded = 3
    public var _name: Swift.String {
      get
    }
    public init?(rawValue: Swift.Int)
    public typealias RawValue = Swift.Int
    public var rawValue: Swift.Int {
      get
    }
  }
  @objc public enum ProgressionType : Swift.Int, Swift.Hashable {
    case Achievement = 0
    case GameplayUnit = 1
    case ItemLevel = 2
    case Unlock = 3
    case PlayerLevel = 4
    case Task = 5
    case Other = 6
    public init?(rawValue: Swift.Int)
    public typealias RawValue = Swift.Int
    public var rawValue: Swift.Int {
      get
    }
  }
  @objc public enum ProgressionStatus : Swift.Int, Swift.Hashable {
    case Start = 0
    case Complete = 1
    case Fail = 2
    public init?(rawValue: Swift.Int)
    public typealias RawValue = Swift.Int
    public var rawValue: Swift.Int {
      get
    }
  }
  @objc public enum ProgressionSource : Swift.Int {
    case Undefined = 0
    case CoreContent = 1
    case OptionalContent = 2
    case Boss = 3
    case Social = 4
    case SpecialEvent = 5
    case Other = 6
    public var _name: Swift.String? {
      get
    }
    public init?(rawValue: Swift.Int)
    public typealias RawValue = Swift.Int
    public var rawValue: Swift.Int {
      get
    }
  }
  @objc public func AddProgressionEvent(status: NeftaSDK.NeftaEvents.ProgressionStatus, type: NeftaSDK.NeftaEvents.ProgressionType, source: NeftaSDK.NeftaEvents.ProgressionSource)
  @objc public func AddProgressionEvent(status: NeftaSDK.NeftaEvents.ProgressionStatus, type: NeftaSDK.NeftaEvents.ProgressionType, source: NeftaSDK.NeftaEvents.ProgressionSource, name: Swift.String?, value: Swift.Int64)
  @objc public func AddProgressionEvent(status: NeftaSDK.NeftaEvents.ProgressionStatus, type: NeftaSDK.NeftaEvents.ProgressionType, source: NeftaSDK.NeftaEvents.ProgressionSource, name: Swift.String?, value: Swift.Int64, customPayload: Swift.String?)
  @objc public enum ResourceCategory : Swift.Int {
    case Other = 0
    case SoftCurrency = 1
    case PremiumCurrency = 2
    case Resource = 3
    case Consumable = 4
    case CosmeticItem = 5
    case CoreItem = 6
    case Chest = 7
    case Experience = 8
    public init?(rawValue: Swift.Int)
    public typealias RawValue = Swift.Int
    public var rawValue: Swift.Int {
      get
    }
  }
  @objc public enum ReceiveMethod : Swift.Int {
    case Undefined = 0
    case LevelEnd = 1
    case Reward = 2
    case Loot = 3
    case Shop = 4
    case Iap = 5
    case Create = 6
    case Other = 7
    public var _name: Swift.String? {
      get
    }
    public init?(rawValue: Swift.Int)
    public typealias RawValue = Swift.Int
    public var rawValue: Swift.Int {
      get
    }
  }
  @objc public func AddReceiveEvent(category: NeftaSDK.NeftaEvents.ResourceCategory, method: NeftaSDK.NeftaEvents.ReceiveMethod)
  @objc public func AddReceiveEvent(category: NeftaSDK.NeftaEvents.ResourceCategory, method: NeftaSDK.NeftaEvents.ReceiveMethod, name: Swift.String?, quantity: Swift.Int64)
  @objc public func AddReceiveEvent(category: NeftaSDK.NeftaEvents.ResourceCategory, method: NeftaSDK.NeftaEvents.ReceiveMethod, name: Swift.String?, quantity: Swift.Int64, customPayload: Swift.String?)
  @objc public enum SpendMethod : Swift.Int {
    case Undefined = 0
    case Boost = 1
    case Continuity = 2
    case Create = 3
    case Unlock = 4
    case Upgrade = 5
    case Shop = 6
    case Other = 7
    public var _name: Swift.String? {
      get
    }
    public init?(rawValue: Swift.Int)
    public typealias RawValue = Swift.Int
    public var rawValue: Swift.Int {
      get
    }
  }
  @objc public func AddSpendEvent(category: NeftaSDK.NeftaEvents.ResourceCategory, method: NeftaSDK.NeftaEvents.SpendMethod)
  @objc public func AddSpendEvent(category: NeftaSDK.NeftaEvents.ResourceCategory, method: NeftaSDK.NeftaEvents.SpendMethod, name: Swift.String?, quantity: Swift.Int64)
  @objc public func AddSpendEvent(category: NeftaSDK.NeftaEvents.ResourceCategory, method: NeftaSDK.NeftaEvents.SpendMethod, name: Swift.String?, quantity: Swift.Int64, customPayload: Swift.String?)
  @objc public func AddPurchaseEvent(name: Swift.String, price: Foundation.Decimal, currency: Swift.String)
  @objc public func AddPurchaseEvent(name: Swift.String, price: Foundation.Decimal, currency: Swift.String, customPayload: Swift.String?)
  @objc deinit
}
@objc public protocol NInterstitialListener : NeftaSDK.NAdListener {
}
@objc public protocol NRewardedListener : NeftaSDK.NAdListener {
  @objc func OnReward(ad: NeftaSDK.NAd)
}
@_hasMissingDesignatedInitializers @objc @_Concurrency.MainActor @preconcurrency public class WebController : UIKit.UIView, WebKit.WKNavigationDelegate, WebKit.WKUIDelegate, WebKit.WKScriptMessageHandler, UIKit.UIGestureRecognizerDelegate {
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func layoutSubviews()
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func didMoveToSuperview()
  @_Concurrency.MainActor @preconcurrency @objc public func webView(_ webView: WebKit.WKWebView, didFail navigation: WebKit.WKNavigation!, withError error: any Swift.Error)
  @_Concurrency.MainActor @preconcurrency @objc public func webView(_ webView: WebKit.WKWebView, didFailProvisionalNavigation navigation: WebKit.WKNavigation!, withError error: any Swift.Error)
  @_Concurrency.MainActor @preconcurrency @objc public func webView(_ webView: WebKit.WKWebView, didFinish navigation: WebKit.WKNavigation!)
  @_Concurrency.MainActor @preconcurrency @objc public func webView(_ webView: WebKit.WKWebView, decidePolicyFor navigationAction: WebKit.WKNavigationAction, decisionHandler: @escaping (WebKit.WKNavigationActionPolicy) -> Swift.Void)
  @_Concurrency.MainActor @preconcurrency @objc public func webView(_ webView: WebKit.WKWebView, createWebViewWith configuration: WebKit.WKWebViewConfiguration, for navigationAction: WebKit.WKNavigationAction, windowFeatures: WebKit.WKWindowFeatures) -> WebKit.WKWebView?
  @_Concurrency.MainActor @preconcurrency @objc public func userContentController(_ userContentController: WebKit.WKUserContentController, didReceive message: WebKit.WKScriptMessage)
  @_Concurrency.MainActor @preconcurrency @objc public func gestureRecognizer(_ gestureRecognizer: UIKit.UIGestureRecognizer, shouldRecognizeSimultaneouslyWith otherGestureRecognizer: UIKit.UIGestureRecognizer) -> Swift.Bool
  @objc deinit
}
@objc public protocol NBannerListener : NeftaSDK.NAdListener {
}
@_inheritsConvenienceInitializers @objc public class NRewarded : NeftaSDK.NAd {
  @objc override public init(id: Swift.String)
  @objc deinit
}
@objc public class NBanner : NeftaSDK.NAd {
  @objc public enum Position : Swift.Int {
    case None = 0
    case Top = 1
    case Bottom = 2
    public init?(rawValue: Swift.Int)
    public typealias RawValue = Swift.Int
    public var rawValue: Swift.Int {
      get
    }
  }
  @objc public var _position: NeftaSDK.NBanner.Position
  @objc public var _onRemove: ((NeftaSDK.NBanner) -> Swift.Void)?
  @objc public init(id: Swift.String, parent: UIKit.UIView)
  @objc public init(id: Swift.String, position: NeftaSDK.NBanner.Position)
  @objc(SetAutoRefresh:) public func SetAutoRefresh(autoRefresh: Swift.Bool)
  @objc(GracefulShow:) public func GracefulShow(viewController: UIKit.UIViewController?) -> UIKit.UIView?
  @objc public func GetView() -> UIKit.UIView?
  @objc override public func Show(viewController: UIKit.UIViewController?)
  @objc override public func Close()
  @objc public func Hide()
  @objc deinit
}
@objc public class UnityWrapper : ObjectiveC.NSObject {
  public typealias IOnReadyBlock = ((Swift.String) -> Swift.Void)
  public typealias IOnBidBlock = ((Swift.String, Swift.Float, Swift.Int) -> Swift.Void)
  public typealias IOnFailBlock = ((Swift.String, Swift.Int, Swift.String?) -> Swift.Void)
  public typealias IOnLoadBlock = ((Swift.String, Swift.Int, Swift.Int) -> Swift.Void)
  public typealias IOnChangeBlock = ((Swift.String) -> Swift.Void)
  @objc public var IOnReady: NeftaSDK.UnityWrapper.IOnReadyBlock?
  @objc public var IOnBid: NeftaSDK.UnityWrapper.IOnBidBlock?
  @objc public var IOnLoadStart: NeftaSDK.UnityWrapper.IOnChangeBlock?
  @objc public var IOnLoadFail: NeftaSDK.UnityWrapper.IOnFailBlock?
  @objc public var IOnLoad: NeftaSDK.UnityWrapper.IOnLoadBlock?
  @objc public var IOnShowFail: NeftaSDK.UnityWrapper.IOnFailBlock?
  @objc public var IOnShow: NeftaSDK.UnityWrapper.IOnChangeBlock?
  @objc public var IOnClick: NeftaSDK.UnityWrapper.IOnChangeBlock?
  @objc public var IOnClose: NeftaSDK.UnityWrapper.IOnChangeBlock?
  @objc public var IOnReward: NeftaSDK.UnityWrapper.IOnChangeBlock?
  @objc final public let _plugin: NeftaSDK.NeftaPlugin
  @objc public init(viewController: UIKit.UIViewController, appId: Swift.String)
  @objc public func SetFloorPrice(id: Swift.String, floorPrice: Swift.Float)
  @objc public func SetCustomParameter(id: Swift.String, provider: Swift.String, value: Swift.String)
  @objc public func Mute(id: Swift.String, mute: Swift.Bool)
  @objc public func CreateBanner(id: Swift.String, position: Swift.Int, autoRefresh: Swift.Bool)
  @objc public func Bid(id: Swift.String)
  @objc(GetPartialBidRequestAsString:) public func GetPartialBidRequestAsString(id: Swift.String) -> Swift.String?
  @objc public func Load(id: Swift.String)
  @objc public func LoadWithBidResponse(id: Swift.String, bidResponse: Foundation.Data)
  @objc public func CanShow(id: Swift.String) -> Swift.Int
  @objc public func Show(id: Swift.String)
  @objc public func Hide(id: Swift.String)
  @objc public func Close(id: Swift.String)
  @objc deinit
}
extension NeftaSDK.NError.Code : Swift.Equatable {}
extension NeftaSDK.NError.Code : Swift.Hashable {}
extension NeftaSDK.NError.Code : Swift.RawRepresentable {}
extension NeftaSDK.Placement.Types : Swift.Equatable {}
extension NeftaSDK.Placement.Types : Swift.Hashable {}
extension NeftaSDK.Placement.Types : Swift.RawRepresentable {}
extension NeftaSDK.NeftaEvents.SessionCategory : Swift.Equatable {}
extension NeftaSDK.NeftaEvents.SessionCategory : Swift.Hashable {}
extension NeftaSDK.NeftaEvents.SessionCategory : Swift.RawRepresentable {}
extension NeftaSDK.NeftaEvents.ProgressionType : Swift.RawRepresentable {}
extension NeftaSDK.NeftaEvents.ProgressionStatus : Swift.RawRepresentable {}
extension NeftaSDK.NeftaEvents.ProgressionSource : Swift.Equatable {}
extension NeftaSDK.NeftaEvents.ProgressionSource : Swift.Hashable {}
extension NeftaSDK.NeftaEvents.ProgressionSource : Swift.RawRepresentable {}
extension NeftaSDK.NeftaEvents.ResourceCategory : Swift.Equatable {}
extension NeftaSDK.NeftaEvents.ResourceCategory : Swift.Hashable {}
extension NeftaSDK.NeftaEvents.ResourceCategory : Swift.RawRepresentable {}
extension NeftaSDK.NeftaEvents.ReceiveMethod : Swift.Equatable {}
extension NeftaSDK.NeftaEvents.ReceiveMethod : Swift.Hashable {}
extension NeftaSDK.NeftaEvents.ReceiveMethod : Swift.RawRepresentable {}
extension NeftaSDK.NeftaEvents.SpendMethod : Swift.Equatable {}
extension NeftaSDK.NeftaEvents.SpendMethod : Swift.Hashable {}
extension NeftaSDK.NeftaEvents.SpendMethod : Swift.RawRepresentable {}
extension NeftaSDK.NBanner.Position : Swift.Equatable {}
extension NeftaSDK.NBanner.Position : Swift.Hashable {}
extension NeftaSDK.NBanner.Position : Swift.RawRepresentable {}
